source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_2.R')
# B
z = tSquared / sqrt(2)
G = 2 * pnorm(tSquared) - 1
hist(sigma_sq, freq=FALSE) 			# Plotting the histogram of mu-draws
library(invgamma)
income <- c(14,25,45,25,30,33,19,50,34,67)
m <- 3.5
n <- length(income)
n_draws = 10000
t <- 0
for (v in income) {
t <- t + (log(v) - m) ^ 2
}
tSquared <- t / n
theoretical <- function(theta, v, s) {
return ( ((v/2) ^ (v/2)) / gamma(v/2)  * (s ^ v) * (theta ^ (-(v/2+1))) * exp((-v * s ^ 2) / (2 * theta) ))
}
range <- seq(0,10,by=0.01)
mx <- 0 * range
X_draw = dchisq(n_draws, n)
sigma_sq = n*tSqaured / X_draw
for (i in 1:length(range)) {
mx[i] <- theoretical(range[i], length(income), sqrt(tSquared))
}
# Given chisquared
NormalNonInfoPrior<-function(NDraws,Data){
Datamean<-mean(Data)
s2<-var(Data)
n<-length(Data)
PostDraws=matrix(0,NDraws,2)
PostDraws[,2]<-((n-1)*s2)/rchisq(NDraws,n-1)
PostDraws[,1]<-Datamean+rnorm(NDraws,0,1)*sqrt(PostDraws[,2]/n)
return(PostDraws)
}
Data <- c(14,25,45,25,30,33,19,50,34,67) 			# Sampling 100 observations from the N(5,10) density##
PostDraws <- NormalNonInfoPrior(10000, Data) # Generating 1000 draws from the joint posterior density of mu and sigma^2
hist(sigma_sq, freq=FALSE) 			# Plotting the histogram of mu-draws
lines(mx, lwd=3, type='l', col='red')
# B
z = tSquared / sqrt(2)
G = 2 * pnorm(tSquared) - 1
sigma_sq = n*tSqaured / X_draw
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_2.R', echo=TRUE)
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_2.R', echo=TRUE)
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_2.R', echo=TRUE)
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_2.R', echo=TRUE)
sigma_sq <- n*tSquared / X_draw
X_draw = dchisq(n_draws, n)
X_draw = dchisq(n_draws, n)
n <- length(income)
X_draw <- dchisq(n_draws, n)
X_draw <- dchisq(n_draws, n)
sigma_sq <- n*tSquared / X_draw
sigma_sq_dens <- density(sigma_sq_dens)
X_draw <- rchisq(n_draws, n)
sigma_sq <- n*tSquared / X_draw
sigma_sq_dens <- density(sigma_sq_dens)
sigma_sq_dens <- density(sigma_sq)
plot(sigma_sq_dens, col='blue') 			# Plotting the histogram of mu-draws
lines(mx, lwd=3, type='l', col='red')
hist(sigma_sq, freq="FALSE") 			# Plotting the histogram of sigma-draws
lines(mx, lwd=3, type='l', col='red')
hist(sigma_sq, freq="FALSE") 			# Plotting the histogram of sigma-draws
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_2.R', echo=TRUE)
hist(sigma_sq, freq="FALSE") 			# Plotting the histogram of sigma-draws
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_2.R', echo=TRUE)
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_2.R', echo=TRUE)
?dinvchisq
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_2.R', echo=TRUE)
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_2.R', echo=TRUE)
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_2.R', echo=TRUE)
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_2.R', echo=TRUE)
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_2.R', echo=TRUE)
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_2.R', echo=TRUE)
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_2.R', echo=TRUE)
# -----------B-------------
z <- sqrt(sigma_sq/2)
G <- 2*pnorm(z)-1
plot(range, G, type='l')
plot(G, type='l')
plot(x, G, type='l')
x <- seq(0, 10, by=0.01)
plot(x, G, type='l')
x <- seq(0, 10, by=10/n)
x <- seq(0, 10, by=10/n_draws)
x <- seq(0, 10, by=10/n_draws-1)
x <- seq(0, 10, by=10/n_draws-1)
x <- seq(0, 10, by=(10/n_draws)-1)
x <- seq(0, 10-1, by=(10/n_draws))
x <- seq(0, 10-(10/n_draws), by=(10/n_draws))
plot(x, G, type='l')
plot(x, G, type='l')
plot(G, x, type='l')
plot(x, G, type='l')
plot(G, # Plot where y = values and x = index of the value in the vector
xaxt = "n", # Don't label the x-axis
type = "l", # Make it a line plot
main = "cdf of the Standard Normal",
xlab= "Quantiles",
ylab="Probability Density")
# -----------B-------------
z <- sqrt(sigma_sq/2)
G <- 2*pnorm(z)-1
plot(G, # Plot where y = values and x = index of the value in the vector
xaxt = "n", # Don't label the x-axis
type = "l", # Make it a line plot
main = "cdf of the Standard Normal",
xlab= "Quantiles",
ylab="Probability Density")
# -----------B-------------
z <- sigma_sq/sqrt(2)
G <- 2*pnorm(z)-1
plot(G, # Plot where y = values and x = index of the value in the vector
xaxt = "n", # Don't label the x-axis
type = "l", # Make it a line plot
main = "cdf of the Standard Normal",
xlab= "Quantiles",
ylab="Probability Density")
G
hist(G, 100) # Plot where y = values and x = index of the value in the vector
hist(G, 100, xlab="posterior of Gini coefficient", ylab="") # Plot where y = values and x = index of the value in the vector
G.dens = density(G)
View(G.dens)
View(G.dens)
G_dens = density(G)
View(G_dens)
View(G.dens)
G_hpd <- hpd(G_dens, prob=0.95)
?hpd
??hpd
?HPDinterval
??HPDinterval
# -----------C-------------
a <- 0.025
b <- 0.975
cred_int <- quantile(G, probs = c(a, b))
G_dens = density(G)
int <- hpd(G_dens, prob=0.95)
plot(cred_int)
plot(density(G))
lines(x=cred_int[1])
plot(density(G), col='blue')
lines(x=cred_int[1], col='red')
plot(density(G), col='blue')
abline(v=cred_int[1], col='red')
abline(v=cred_int[2], col='red')
plot(density(G), col='blue', xlim=c(0,1), ylim=c(0,9))
abline(v=cred_int[1], col='red')
abline(v=cred_int[2], col='red')
plot(density(G),
col='blue',
xlim=c(0,1),
ylim=c(0,9),
main="95% credibility interval")
?HPDinterval
??HPDinterval
library(coda)
View(G_dens)
income <- c(14,25,45,25,30,33,19,50,34,67)
m <- 3.5
n <- length(income)
n_draws = 10000
t <- 0
for (v in income) {
t <- t + (log(v) - m) ^ 2
}
tSquared <- t / n
# simulate postarior draws
X_draw <- rchisq(n_draws, n)
sigma_sq = n*tSquared / X_draw
#theoretical
theoretical <- function(theta, v, s) {
return ( ((v/2) ^ (v/2)) / gamma(v/2)  * (s ^ v) * (theta ^ (-(v/2+1))) * exp((-v * s ^ 2) / (2 * theta) ))
}
range <- seq(0,10,by=0.01)
mx <- 0 * range
for (i in 1:length(range)) {
mx[i] <- theoretical(range[i], length(income), sqrt(tSquared))
}
# plot
hist(sigma_sq, freq=FALSE)
lines(range, mx, lwd=3, type='l', col='red', xlab = 'sigma')
z <- sqrt(sigma_sq/2)
G <- 2*pnorm(z)-1
hist(G, 100, xlab="posterior of Gini coefficient", ylab="") # Plot where y = values and x = index of the value in the vector
hist(G, 100, freq = FALSE xlab="posterior of Gini coefficient", ylab="") # Plot where y = values and x = index of the value in the vector
hist(G, 100, freq = FALSE, xlab="posterior of Gini coefficient", ylab="") # Plot where y = values and x = index of the value in the vector
# -----------A-------------
#income <- c(14,25,45,25,30,33,19,50,34,67)
income <- c(1,1,1,1,1,1,1,1,1,1)
#income <- c(14,25,45,25,30,33,19,50,34,67)
income <- c(1,1,1,1,1,1,1,1,1,1)
m <- 3.5
n <- length(income)
n_draws = 10000
t <- 0
for (v in income) {
t <- t + (log(v) - m) ^ 2
}
tSquared <- t / n
# simulate postarior draws
X_draw <- rchisq(n_draws, n)
sigma_sq = n*tSquared / X_draw
#theoretical
theoretical <- function(theta, v, s) {
return ( ((v/2) ^ (v/2)) / gamma(v/2)  * (s ^ v) * (theta ^ (-(v/2+1))) * exp((-v * s ^ 2) / (2 * theta) ))
}
range <- seq(0,10,by=0.01)
mx <- 0 * range
for (i in 1:length(range)) {
mx[i] <- theoretical(range[i], length(income), sqrt(tSquared))
}
# plot
hist(sigma_sq, freq=FALSE)
lines(range, mx, lwd=3, type='l', col='red', xlab = 'sigma')
# -----------B-------------
z <- sqrt(sigma_sq/2)
G <- 2*pnorm(z)-1
hist(G, 100, freq = FALSE, xlab="posterior of Gini coefficient", ylab="") # Plot where y = values and x = index of the value in the vector
?rchisq
income <- c(14,25,45,25,30,33,19,50,34,67)
#income <- c(1,1,1,1,1,1,1,1,1,1)
m <- 3.5
n <- length(income)
n_draws = 10000
t <- 0
for (v in income) {
t <- t + (log(v) - m) ^ 2
}
tSquared <- t / n
# simulate postarior draws
X_draw <- rchisq(n_draws, n)
sigma_sq = n*tSquared / X_draw
#theoretical
theoretical <- function(theta, v, s) {
return ( ((v/2) ^ (v/2)) / gamma(v/2)  * (s ^ v) * (theta ^ (-(v/2+1))) * exp((-v * s ^ 2) / (2 * theta) ))
}
range <- seq(0,10,by=0.01)
mx <- 0 * range
for (i in 1:length(range)) {
mx[i] <- theoretical(range[i], length(income), sqrt(tSquared))
}
# plot
hist(1/sigma_sq, freq=FALSE)
lines(range, mx, lwd=3, type='l', col='red', xlab = 'sigma')
# -----------A-------------
income <- c(14,25,45,25,30,33,19,50,34,67)
#income <- c(1,1,1,1,1,1,1,1,1,1)
m <- 3.5
n <- length(income)
n_draws = 10000
t <- 0
for (v in income) {
t <- t + (log(v) - m) ^ 2
}
tSquared <- t / n
# simulate postarior draws
X_draw <- rchisq(n_draws, n)
sigma_sq = n*tSquared / X_draw
#theoretical
theoretical <- function(theta, v, s) {
return ( ((v/2) ^ (v/2)) / gamma(v/2)  * (s ^ v) * (theta ^ (-(v/2+1))) * exp((-v * s ^ 2) / (2 * theta) ))
}
range <- seq(0,10,by=0.01)
mx <- 0 * range
for (i in 1:length(range)) {
mx[i] <- theoretical(range[i], length(income), sqrt(tSquared))
}
# plot
hist(sigma_sq, freq=FALSE)
lines(range, mx, lwd=3, type='l', col='red', xlab = 'sigma')
# plot
hist(sigma_sq, 100, freq=FALSE)
lines(range, mx, lwd=3, type='l', col='red', xlab = 'sigma')
hist(G, 1000, freq = FALSE, xlab="posterior of Gini coefficient", ylab="") # Plot where y = values and x = index of the value in the vector
# plot
hist(sigma_sq, 100, freq=FALSE)
lines(range, mx, lwd=3, type='l', col='red', xlab = 'sigma')
# plot
hist(sigma_sq, 1000, freq=FALSE)
# plot
hist(sigma_sq, 100, freq=FALSE)
lines(range, mx, lwd=3, type='l', col='red', xlab = 'sigma')
cred_int <- quantile(G, probs = c(a, b))
plot(density(G),
col='blue',
xlim=c(0,1),
ylim=c(0,9),
main="95% credibility interval")
abline(v=cred_int[1], col='red')
abline(v=cred_int[2], col='red')
G_dens = density(G)
View(G_dens)
View(G_dens)
sumY <- sum(G_dens.y)
sumY <- sum(G_dens.Y)
sumY <- sum(G_dens[y])
sumY <- sum(G_dens['y'])
sumY <- sum(G_dens[,y])
sumY <- sum(G_dens[,'y'])
sumY <- sum(G_dens["y",])
sumY <- sum(G_dens["y"])
sumY <- (G_dens["y"])
View(sumY)
sumY <- Reduce("+", G_dens["y"])
sumY <- Reduce("+", G_dens["y"])
sumY <- Reduce("+", G_dens["y",])
sumY <- Reduce("+", G_dens["y"])
View(G_dens)
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_2.R')
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_2.R')
View(G.dens)
View(G_dens)
?density
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_2.R')
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_2.R')
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_2.R')
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_2.R')
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_2.R')
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_2.R')
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_2.R')
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_2.R')
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_2.R')
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_2.R')
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_2.R')
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_2.R')
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_2.R')
View(yVals)
sum <- sum(G_dens$y)
y_ordered = G_dens$y[order(-G_dens$y)]
y_ordered = G_dens$y[order(+G_dens$y)]
G_dens = density(G)
y_ordered = G_dens$y[order(-G_dens$y)]
x_ordered = G_dens$x[order(-G_dens$x)]
dens_mass = sum(G_dens$y)
sum <- 0
for (i in y_ordered) {
current_mass <- y_ordered[i] + sum
if ((current_mass/dens_mass) > 0.95) {
break
} else {
sum <- current_mass
}
}
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_2.R')
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_2.R')
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_2.R')
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_2.R')
cred_int <- quantile(G, probs = c(a, b))
plot(density(G),
col='blue',
xlim=c(0,1),
ylim=c(0,9),
main="95% credibility interval")
abline(v=cred_int[1], col='red')
abline(v=cred_int[2], col='red')
abline(v=a, col='green')
abline(v=b, col='green')
a <- 0.025
b <- 0.975
cred_int <- quantile(G, probs = c(a, b))
G_dens = density(G)
y_ordered = G_dens$y[order(-G_dens$y)]
x_ordered = G_dens$x[order(-G_dens$y)]
dens_mass = sum(G_dens$y)
sum <- 0
for (i in y_ordered) {
current_mass <- y_ordered[i] + sum
if ((current_mass/dens_mass) > 0.95) {
break
} else {
sum <- current_mass
}
}
a <- min(x_ordered[1:i])
b <- max(x_ordered[1:i])
plot(density(G),
col='blue',
xlim=c(0,1),
ylim=c(0,9),
main="95% credibility interval")
abline(v=cred_int[1], col='red')
abline(v=cred_int[2], col='red')
abline(v=a, col='green')
abline(v=b, col='green')
a <- min(x_ordered[1:i])
b <- max(x_ordered[1:i])
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_2.R')
cred_int <- quantile(G, probs = c(0.025, 0.975))
G_dens = density(G)
y_ordered = G_dens$y[order(-G_dens$y)]
x_ordered = G_dens$x[order(-G_dens$y)]
dens_mass = sum(G_dens$y)
sum <- 0
for (i in y_ordered) {
current_mass <- y_ordered[i] + sum
if ((current_mass/dens_mass) > 0.95) {
break
} else {
sum <- current_mass
}
}
a <- min(x_ordered[1:i])
b <- max(x_ordered[1:i])
plot(density(G),
col='blue',
xlim=c(0,1),
ylim=c(0,9),
main="95% credibility interval")
abline(v=cred_int[1], col='red')
abline(v=cred_int[2], col='red')
abline(v=a, col='green')
abline(v=b, col='green')
cred_int <- quantile(G, probs = c(0.025, 0.975))
G_dens = density(G)
y_ordered = G_dens$y[order(-G_dens$y)]
x_ordered = G_dens$x[order(-G_dens$y)]
dens_mass = sum(G_dens$y)
sum <- 0
current_mass <- 0
for (i in y_ordered) {
current_mass <- y_ordered[i] + sum
if ((current_mass/dens_mass) > 0.95) {
break
} else {
sum <- current_mass
}
}
a <- min(x_ordered[1:i])
b <- max(x_ordered[1:i])
plot(density(G),
col='blue',
xlim=c(0,1),
ylim=c(0,9),
main="95% credibility interval")
abline(v=cred_int[1], col='red')
abline(v=cred_int[2], col='red')
abline(v=a, col='green')
abline(v=b, col='green')
cred_int <- quantile(G, probs = c(0.025, 0.975))
G_dens = density(G)
y_ordered = G_dens$y[order(-G_dens$y)]
x_ordered = G_dens$x[order(-G_dens$y)]
dens_mass = sum(G_dens$y)
sum <- 0
current_mass <- 0
for (i in 1:length(y_ordered)) {
current_mass <- y_ordered[i] + sum
if ((current_mass/dens_mass) > 0.95) {
break
} else {
sum <- current_mass
}
}
a <- min(x_ordered[1:i])
b <- max(x_ordered[1:i])
plot(density(G),
col='blue',
xlim=c(0,1),
ylim=c(0,9),
main="95% credibility interval")
abline(v=cred_int[1], col='red')
abline(v=cred_int[2], col='red')
abline(v=a, col='green')
abline(v=b, col='green')
k <- dexp(1)
plot(k)
k <- dexp(y,1)
plot(k)
?dexp
n = seq(0, 10, by=0.01)
k <- dexp(n,1)
plot(k)
plot(k, type='l')
?bessel
?pi
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_3.R')
clear
?clear
k <- length(kappa)
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_3.R')
?dexp
kappa <- dexp(1)
kappa <- dexp(2)
kappa <- dexp(x,lambda)
k <- length(kappa)
y <- c(-2.44, 2.14, 2.54, 1.83, 2.01, 2.33, -2.79, 2.23, 2.07, 2.02)
x <- seq(0,10, by=0.01)
mu <- 2.39
lambda <- 1
kappa <- dexp(x,lambda)
k <- length(kappa)
plot(k, kappa, type = 'l')
plot(x, kappa, type = 'l')
?sapply
likelihood = likelihood*Mises(kappa, y, mu)
likelihood = Mises(kappa, y, mu)
likelihood = Mises(kappa, y, mu)
Mises <- function(kappa, y, mu) {
I <- besselI(kappa,0)
return (exp(kappa*cos(y-mu)))/(2*pi*I)
}
likelihood = Mises(kappa, y, mu)
likelihood = Mises(kappa[1], y, mu)
?prod
source('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/lab1_3.R')
source('~/.active-rstudio-document', echo=TRUE)
getwd()
setwd("~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/assets")
source('~/.active-rstudio-document', echo=TRUE)
unlink('~/Documents/Liu/År 4/TDDE07/labs/tdde07/Lab1/Lab1_cache', recursive = TRUE)
